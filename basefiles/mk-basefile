#! /bin/bash

# mk-basefile, create basefiles for some distributions
#
# Thomas Lange, Uni Koeln, 2011-2025
# based on the Makefile implementation of Michael Goetze
#
# Usage example: mk-basefile -J STRETCH64
# This will create a STRETCH64.tar.xz basefile.

# Supported distributions (i386/amd64):
# Debian GNU/Linux
# Ubuntu 14.04/16.04/20.04/22.04
# AlmaLinux 9/10
# Rocky Linux 8/9/10
#
# Packages you might want to install to use this command:
# debootstrap, rinse, xz-utils


# Define your local mirros here
MIRROR_DEBIAN=http://deb.debian.org/debian/
MIRROR_UBUNTU=http://mirror.netcologne.de/ubuntu/

EXCLUDE_SQUEEZE=isc-dhcp-client,isc-dhcp-common,info
EXCLUDE_WHEEZY=info
EXCLUDE_JESSIE=info
EXCLUDE_STRETCH=info
EXCLUDE_BUSTER=
EXCLUDE_BULLSEYE=
EXCLUDE_BOOKWORM=
EXCLUDE_TRIXIE=
EXCLUDE_FORKY=
EXCLUDE_SID=

EXCLUDE_TRUSTY=dhcp3-client,dhcp3-common,info
EXCLUDE_XENIAL=udhcpc,dibbler-client,info
EXCLUDE_BIONIC=udhcpc,dibbler-client,info
EXCLUDE_FOCAL=udhcpc,dibbler-client,info
EXCLUDE_JAMMY=udhcpc,dibbler-client,info
EXCLUDE_NOBLE=udhcpc,dibbler-client,info

# here you can add packages, that are needed very early
INCLUDE_DEBIAN=


setarch() {

    l32=
    if [ X$1 = Xi386 ]; then
        l32=linux32
    fi
}

check() {

    if [ $(id -u) != 0 ]; then
        echo "You must be root to create chroots."
        exit 1
    fi
    mknod $xtmp/test-dev-null c 1 3
    if [ $? -eq 1 ]; then
        echo "Cannot create device files on $xtmp, aborting."
        echo "Perhaps this directory is mounted with option nodev."
        rm -rf $xtmp
        exit 1
    fi
    echo test > $xtmp/test-dev-null
    if [ $? -eq 1 ]; then
        echo "Cannot create device files on $xtmp, aborting."
        echo "Perhaps this directory is mounted with option nodev."
        rm -rf $xtmp
        exit 1
    fi
    rm -f $xtmp/test-dev-null
}


cleanup-deb() {

    chroot $xtmp apt-get clean
    rm -f $xtmp/etc/hostname $xtmp/etc/resolv.conf \
          $xtmp/var/lib/apt/lists/*_* $xtmp/usr/bin/qemu-*-static \
          $xtmp/etc/udev/rules.d/70-persistent-net.rules \
          $xtmp/var/lib/dbus/machine-id
    > $xtmp/etc/machine-id
}


cleanup-rinse() {

    # check if chroot works
    echo "Installed packages in chroot:"
    chroot $xtmp rpm -qa|sort
    echo -n "CHROOT rpm -qa: "
    chroot $xtmp rpm -qa|wc -l

    rm -f $xtmp/etc/resolv.conf
    if [ -d $xtmp/etc/yum.repos.d/orig ]; then
        mv $xtmp/etc/yum.repos.d/orig/* $xtmp/etc/yum.repos.d/
        rm -rf $xtmp/etc/yum.repos.d/orig
    fi
}


tarit() {

    tar $attributes --numeric-owner --one-file-system -C $xtmp -cf - . | $zip > $target.$ext
}


rpmdist() {

    local arch=$1
    local vers=$2
    local dist=$3
    local domain=$(domainname)

    check
    setarch $arch
    $l32 rinse --directory $xtmp --distribution $dist-$vers --arch $arch
    domainname $domain # workaround for #613377
    cleanup-rinse
    tarit
}


alma() {
    rpmdist $1 $2 alma
}

rocky() {
    rpmdist $1 $2 rocky
}

debgeneric() {

    local DIST=$1
    shift
    local mirror=$1
    shift
    local arch=$1

    dist=${DIST%%[0-9][0-9]}
    local exc="EXCLUDE_$dist"
    [ -n "${!exc}" ] && exc="--exclude=${!exc}" || unset exc
    dist=${dist,,}

    check
    if [ -n "$INCLUDE_DEBIAN" ]; then
	local inc="--include=$INCLUDE_DEBIAN"
    fi

    if [ -n "$arch" ]; then
	debootstrap --arch $arch ${exc} $inc $dist $xtmp $mirror
	target="${target}_${arch^^}"
    else
	if [[ $DIST =~ 64 ]]; then
            arch=amd64
	else
            arch=i386
	fi
	debootstrap --arch $arch ${exc} $inc $dist $xtmp $mirror
    fi
    cleanup-deb
    tarit
}

prtdists() {

    echo "Available:

    ALMA9_64
    ALMA10_64
    ROCKY8_64
    ROCKY9_64
    ROCKY10_64
    TRUSTY32     TRUSTY64
    XENIAL32     XENIAL64
                 BIONIC64
                 FOCAL64
                 JAMMY64
                 NOBLE64
    SQUEEZE32    SQUEEZE64
    WHEEZY32     WHEEZY64
    JESSIE32     JESSIE64
    STRETCH32    STRETCH64
    BUSTER32     BUSTER64
    BULLSEYE32   BULLSEYE64
    BOOKWORM32   BOOKWORM64
    TRIXIE32     TRIXIE64
    FORKY32      FORKY64
    SID32        SID64
"
}

usage() {

    cat <<EOF
mk-basefile, create minimal base files for a Linux distritubtion

   Copyright (C) 2011-2025 by Thomas Lange

Usage: mk-basefile [OPTION] ... DISTRIBUTION

   -s                   Show list of supported linux distributions
   -f ARCH              Build for foreign architecture ARCH.
   -d DIR               Use DIR for creating the temporary subtree structure.
   -z                   Use zstd for compressing the tar file.
   -J                   Use xz for compressing the tar file.
   -k                   Keep the temporary subtree structure, do not remove it.
   -h                   Print help.

 Usage example: mk-basefile -J STRETCH64
 This will create a STRETCH64.tar.xz basefile.

EOF
    exit 0
}

# main routine

ext=tar
zip=cat
attributes=
cleanup=1
attributes="--xattrs --selinux --acls"

while getopts ashzJd:kf: opt ; do
    case "$opt" in
        a) echo "$0: Warning. -a is ignored, because xtattrs, acls and selinux are always added." ;;
        d) export TMPDIR=$OPTARG ;;
        f) export ARCH=$OPTARG ;;
        z) zip="zstd -9"; ext=tar.zst ;;
        J) zip="xz -8" ext=tar.xz ;;
        k) cleanup=0 ;;
        h) usage ;;
        s) prtdists ; exit 0;;
        ?) exit 3 ;; # error in option parsing
    esac
done
shift $((OPTIND - 1))

xtmp=$(mktemp --tmpdir -d basefiles.XXXXXXXX)
if [ $? -eq 1 ]; then
    echo "mktemp failed. Aborting."
    exit 2
fi
chmod 755 $xtmp

target=$1 # also the name of the output file

[ -z "$target" ] && usage
case "$target" in
    ROCKY8_64) rocky amd64 8 ;;
    ROCKY9_64) rocky amd64 9 ;;
    ROCKY10_64) rocky amd64 10 ;;
    ALMA9_64) alma amd64 9 ;;
    ALMA10_64) alma amd64 10 ;;
    TRUSTY*|XENIAL*|BIONIC*|FOCAL*|JAMMY*|NOBLE*)
        debgeneric $target $MIRROR_UBUNTU ;;
    SQUEEZE*|WHEEZY*|JESSIE*|STRETCH*|BUSTER*|BULLSEYE*|BOOKWORM*|TRIXIE*|FORKY*|SID*)
        debgeneric $target $MIRROR_DEBIAN $ARCH;;
    *) echo "Unknown distribution. Aborting."
       prtdists
       exit 99 ;;
esac

# cleanup
if [ $cleanup -eq 1 ]; then
   rm -rf $xtmp
fi
